/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Core;

import Algoritms.Cad;
import Dinamic.VectorString;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Ing Lalux
 */
public class Filtro extends javax.swing.JFrame {
    public String filtro;
    
    
    /**
     * Creates new form Filtro
     */
    public Filtro() {
        initComponents();
    }
    
    
    /**
     * Creates el filtro con los parametros
     */
    public Filtro(String parametros) {
        initComponents();
        
        //Cargar los datos en la tabla
                //Guardar el nuevo filtro y reordenar
                filtro = parametros;
                
                
                //Obtener los valores del filtro
                String P = Cad.subCadCadACadB(parametros,"P(",")");
                    boolean order_P = false;
                    if(Cad.Equals(P, "true", false)){
                        order_P = true;
                    }

                String FF = Cad.subCadCadACadB(parametros,"FF(",")");
                    boolean order_FF = false;
                    if(Cad.Equals(FF, "true", false)){
                        order_FF = true;
                    }   

                String PBP = Cad.subCadCadACadB(parametros,"PBP(",")");
                    boolean order_PBP = false;
                    if(Cad.Equals(PBP, "true", false)){
                        order_PBP = true;
                    }  

                String RBP = Cad.subCadCadACadB(parametros,"RBP(",")");
                    boolean order_RBP = false;
                    if(Cad.Equals(RBP, "true", false)){
                        order_RBP = true;
                    }

                String CBP = Cad.subCadCadACadB(parametros,"CBP(",")");
                    boolean order_CBP = false;
                    if(Cad.Equals(CBP, "true", false)){
                        order_CBP = true;
                    } 
                VectorString orden_parametros = new VectorString(Cad.aVector(parametros,","));
                
        //Trabajar con la tabla
        //Obtener la Tabla//
            TableModel modelTabla = Tabla.getModel();
            
            //Borrar la tabla Anterior
            for(int i=0; i<modelTabla.getRowCount(); i++){
                modelTabla.setValueAt("", i, 0);
                modelTabla.setValueAt(false, i, 1);
            }
        
        //Meter nuevos valores en la tabla
            DefaultTableModel modeloTabla = (DefaultTableModel) Tabla.getModel();
            modeloTabla.addRow(new Object[0]);
            
                
        for(int posInsert=0; posInsert<orden_parametros.Longitud(); posInsert++){
            String param = orden_parametros.getValue(posInsert,"ERROR");
            String state = Cad.subCadCadACadB(param,"(",")");
            boolean Activo = false;
                if(state.equalsIgnoreCase("true")){
                    Activo=true;
                }
            
            modelTabla.setValueAt(Cad.subCadPosACadB(param,0,"("), posInsert,0);
            modelTabla.setValueAt(Activo, posInsert, 1);
        }  
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        botonUP = new javax.swing.JButton();
        botonDOWN = new javax.swing.JButton();
        botonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Filtro de Actividades");

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null},
                {"", null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Parametro", "Menor to Mayor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabla);
        if (Tabla.getColumnModel().getColumnCount() > 0) {
            Tabla.getColumnModel().getColumn(1).setMinWidth(100);
            Tabla.getColumnModel().getColumn(1).setMaxWidth(250);
        }

        botonUP.setText("UP");
        botonUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUPActionPerformed(evt);
            }
        });

        botonDOWN.setText("DOWN");

        botonOK.setText("OK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonDOWN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonUP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonUP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonDOWN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonOK)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUPActionPerformed
        //Obtener la tabla
        DefaultTableModel modeloTabla = (DefaultTableModel) Tabla.getModel();

        //Obtener el elemento seleccionado
        int posSelected = Tabla.getSelectedRow();
        String param = (String) modeloTabla.getValueAt(posSelected,0);
        boolean state = (boolean) modeloTabla.getValueAt(posSelected,1);
        
        //Obtener el elemento de arriba, si se puede
        String paramUP = "";
        boolean stateUP = false;
        if(posSelected==0){
            //No se puede subir y se queda como esta
        }else{
           paramUP = (String) modeloTabla.getValueAt(posSelected-1,0);
           stateUP = (boolean) modeloTabla.getValueAt(posSelected-1,1); 
           
           
           //Intercambiar los elementos
           modeloTabla.setValueAt(paramUP,posSelected,0);
           modeloTabla.setValueAt(stateUP,posSelected,1);
           
           modeloTabla.setValueAt(param,posSelected-1,0);
           modeloTabla.setValueAt(state,posSelected-1,1);
        }
    }//GEN-LAST:event_botonUPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Filtro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Filtro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Filtro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Filtro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Filtro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla;
    private javax.swing.JButton botonDOWN;
    private javax.swing.JButton botonOK;
    private javax.swing.JButton botonUP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
